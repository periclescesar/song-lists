// Code generated by dingo; DO NOT EDIT
package pkg

import (
	drivers "GoSOLID/pkg/drivers"
	repositories "GoSOLID/pkg/services/repositories"
)

type Container struct {
	JsonDriver           *drivers.JsonDriver
	JsonListRepository   *repositories.JsonListRepository
	ListRepository       repositories.ListRepository
	SqliteListRepository *repositories.SqliteListRepository
}

var DefaultContainer = NewContainer()

func NewContainer() *Container {
	return &Container{}
}
func (container *Container) GetJsonDriver() *drivers.JsonDriver {
	if container.JsonDriver == nil {
		service := drivers.NewJsonDriver("../data/list.json")
		container.JsonDriver = service
	}
	return container.JsonDriver
}
func (container *Container) GetJsonListRepository() *repositories.JsonListRepository {
	if container.JsonListRepository == nil {
		service := repositories.NewJsonListRepository(*container.GetJsonDriver())
		container.JsonListRepository = service
	}
	return container.JsonListRepository
}
func (container *Container) GetListRepository() repositories.ListRepository {
	if container.ListRepository == nil {
		service := container.GetSqliteListRepository()
		container.ListRepository = service
	}
	return container.ListRepository
}
func (container *Container) GetSqliteListRepository() *repositories.SqliteListRepository {
	if container.SqliteListRepository == nil {
		service := repositories.NewSqliteListRepository()
		container.SqliteListRepository = service
	}
	return container.SqliteListRepository
}
